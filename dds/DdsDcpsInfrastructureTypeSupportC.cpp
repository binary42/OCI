// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376

#include "DCPS/DdsDcps_pch.h"
#include "DdsDcpsInfrastructureTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "DdsDcpsInfrastructureTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::ParticipantBuiltinTopicDataTypeSupport.

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataTypeSupport>::duplicate (
    DDS::ParticipantBuiltinTopicDataTypeSupport_ptr p)
{
  return DDS::ParticipantBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataTypeSupport>::release (
    DDS::ParticipantBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataTypeSupport>::nil (void)
{
  return DDS::ParticipantBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataTypeSupport>::marshal (
    const DDS::ParticipantBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::ParticipantBuiltinTopicDataTypeSupport::ParticipantBuiltinTopicDataTypeSupport (void)
{}

DDS::ParticipantBuiltinTopicDataTypeSupport::~ParticipantBuiltinTopicDataTypeSupport (void)
{
}

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
DDS::ParticipantBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
DDS::ParticipantBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
DDS::ParticipantBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

DDS::ParticipantBuiltinTopicDataTypeSupport_ptr
DDS::ParticipantBuiltinTopicDataTypeSupport::_duplicate (ParticipantBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::ParticipantBuiltinTopicDataTypeSupport::_tao_release (ParticipantBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/ParticipantBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::ParticipantBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDS/ParticipantBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::ParticipantBuiltinTopicDataDataWriter.

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataWriter>::duplicate (
    DDS::ParticipantBuiltinTopicDataDataWriter_ptr p)
{
  return DDS::ParticipantBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataWriter>::release (
    DDS::ParticipantBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataWriter>::nil (void)
{
  return DDS::ParticipantBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataWriter>::marshal (
    const DDS::ParticipantBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::ParticipantBuiltinTopicDataDataWriter::ParticipantBuiltinTopicDataDataWriter (void)
{}

DDS::ParticipantBuiltinTopicDataDataWriter::~ParticipantBuiltinTopicDataDataWriter (void)
{
}

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
DDS::ParticipantBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
DDS::ParticipantBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
DDS::ParticipantBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

DDS::ParticipantBuiltinTopicDataDataWriter_ptr
DDS::ParticipantBuiltinTopicDataDataWriter::_duplicate (ParticipantBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::ParticipantBuiltinTopicDataDataWriter::_tao_release (ParticipantBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/ParticipantBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::ParticipantBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDS/ParticipantBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::ParticipantBuiltinTopicDataDataReader.

DDS::ParticipantBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataReader>::duplicate (
    DDS::ParticipantBuiltinTopicDataDataReader_ptr p)
{
  return DDS::ParticipantBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataReader>::release (
    DDS::ParticipantBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDS::ParticipantBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataReader>::nil (void)
{
  return DDS::ParticipantBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::ParticipantBuiltinTopicDataDataReader>::marshal (
    const DDS::ParticipantBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::ParticipantBuiltinTopicDataDataReader::ParticipantBuiltinTopicDataDataReader (void)
{}

DDS::ParticipantBuiltinTopicDataDataReader::~ParticipantBuiltinTopicDataDataReader (void)
{
}

DDS::ParticipantBuiltinTopicDataDataReader_ptr
DDS::ParticipantBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataDataReader_ptr
DDS::ParticipantBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<ParticipantBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::ParticipantBuiltinTopicDataDataReader_ptr
DDS::ParticipantBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

DDS::ParticipantBuiltinTopicDataDataReader_ptr
DDS::ParticipantBuiltinTopicDataDataReader::_duplicate (ParticipantBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::ParticipantBuiltinTopicDataDataReader::_tao_release (ParticipantBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/ParticipantBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::ParticipantBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:DDS/ParticipantBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
DDS::ParticipantBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::TopicBuiltinTopicDataTypeSupport.

DDS::TopicBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataTypeSupport>::duplicate (
    DDS::TopicBuiltinTopicDataTypeSupport_ptr p)
{
  return DDS::TopicBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataTypeSupport>::release (
    DDS::TopicBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDS::TopicBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataTypeSupport>::nil (void)
{
  return DDS::TopicBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataTypeSupport>::marshal (
    const DDS::TopicBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::TopicBuiltinTopicDataTypeSupport::TopicBuiltinTopicDataTypeSupport (void)
{}

DDS::TopicBuiltinTopicDataTypeSupport::~TopicBuiltinTopicDataTypeSupport (void)
{
}

DDS::TopicBuiltinTopicDataTypeSupport_ptr
DDS::TopicBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataTypeSupport_ptr
DDS::TopicBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataTypeSupport_ptr
DDS::TopicBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

DDS::TopicBuiltinTopicDataTypeSupport_ptr
DDS::TopicBuiltinTopicDataTypeSupport::_duplicate (TopicBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::TopicBuiltinTopicDataTypeSupport::_tao_release (TopicBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TopicBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::TopicBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDS/TopicBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::TopicBuiltinTopicDataDataWriter.

DDS::TopicBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataWriter>::duplicate (
    DDS::TopicBuiltinTopicDataDataWriter_ptr p)
{
  return DDS::TopicBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataWriter>::release (
    DDS::TopicBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDS::TopicBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataWriter>::nil (void)
{
  return DDS::TopicBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataWriter>::marshal (
    const DDS::TopicBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::TopicBuiltinTopicDataDataWriter::TopicBuiltinTopicDataDataWriter (void)
{}

DDS::TopicBuiltinTopicDataDataWriter::~TopicBuiltinTopicDataDataWriter (void)
{
}

DDS::TopicBuiltinTopicDataDataWriter_ptr
DDS::TopicBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataDataWriter_ptr
DDS::TopicBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataDataWriter_ptr
DDS::TopicBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

DDS::TopicBuiltinTopicDataDataWriter_ptr
DDS::TopicBuiltinTopicDataDataWriter::_duplicate (TopicBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::TopicBuiltinTopicDataDataWriter::_tao_release (TopicBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TopicBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::TopicBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDS/TopicBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::TopicBuiltinTopicDataDataReader.

DDS::TopicBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataReader>::duplicate (
    DDS::TopicBuiltinTopicDataDataReader_ptr p)
{
  return DDS::TopicBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataReader>::release (
    DDS::TopicBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDS::TopicBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataReader>::nil (void)
{
  return DDS::TopicBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::TopicBuiltinTopicDataDataReader>::marshal (
    const DDS::TopicBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::TopicBuiltinTopicDataDataReader::TopicBuiltinTopicDataDataReader (void)
{}

DDS::TopicBuiltinTopicDataDataReader::~TopicBuiltinTopicDataDataReader (void)
{
}

DDS::TopicBuiltinTopicDataDataReader_ptr
DDS::TopicBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataDataReader_ptr
DDS::TopicBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<TopicBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::TopicBuiltinTopicDataDataReader_ptr
DDS::TopicBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

DDS::TopicBuiltinTopicDataDataReader_ptr
DDS::TopicBuiltinTopicDataDataReader::_duplicate (TopicBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::TopicBuiltinTopicDataDataReader::_tao_release (TopicBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TopicBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::TopicBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:DDS/TopicBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
DDS::TopicBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::PublicationBuiltinTopicDataTypeSupport.

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataTypeSupport>::duplicate (
    DDS::PublicationBuiltinTopicDataTypeSupport_ptr p)
{
  return DDS::PublicationBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataTypeSupport>::release (
    DDS::PublicationBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataTypeSupport>::nil (void)
{
  return DDS::PublicationBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataTypeSupport>::marshal (
    const DDS::PublicationBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::PublicationBuiltinTopicDataTypeSupport::PublicationBuiltinTopicDataTypeSupport (void)
{}

DDS::PublicationBuiltinTopicDataTypeSupport::~PublicationBuiltinTopicDataTypeSupport (void)
{
}

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
DDS::PublicationBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
DDS::PublicationBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
DDS::PublicationBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

DDS::PublicationBuiltinTopicDataTypeSupport_ptr
DDS::PublicationBuiltinTopicDataTypeSupport::_duplicate (PublicationBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::PublicationBuiltinTopicDataTypeSupport::_tao_release (PublicationBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/PublicationBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::PublicationBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDS/PublicationBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::PublicationBuiltinTopicDataDataWriter.

DDS::PublicationBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataWriter>::duplicate (
    DDS::PublicationBuiltinTopicDataDataWriter_ptr p)
{
  return DDS::PublicationBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataWriter>::release (
    DDS::PublicationBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDS::PublicationBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataWriter>::nil (void)
{
  return DDS::PublicationBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataWriter>::marshal (
    const DDS::PublicationBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::PublicationBuiltinTopicDataDataWriter::PublicationBuiltinTopicDataDataWriter (void)
{}

DDS::PublicationBuiltinTopicDataDataWriter::~PublicationBuiltinTopicDataDataWriter (void)
{
}

DDS::PublicationBuiltinTopicDataDataWriter_ptr
DDS::PublicationBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataDataWriter_ptr
DDS::PublicationBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataDataWriter_ptr
DDS::PublicationBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

DDS::PublicationBuiltinTopicDataDataWriter_ptr
DDS::PublicationBuiltinTopicDataDataWriter::_duplicate (PublicationBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::PublicationBuiltinTopicDataDataWriter::_tao_release (PublicationBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/PublicationBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::PublicationBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDS/PublicationBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::PublicationBuiltinTopicDataDataReader.

DDS::PublicationBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataReader>::duplicate (
    DDS::PublicationBuiltinTopicDataDataReader_ptr p)
{
  return DDS::PublicationBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataReader>::release (
    DDS::PublicationBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDS::PublicationBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataReader>::nil (void)
{
  return DDS::PublicationBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::PublicationBuiltinTopicDataDataReader>::marshal (
    const DDS::PublicationBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::PublicationBuiltinTopicDataDataReader::PublicationBuiltinTopicDataDataReader (void)
{}

DDS::PublicationBuiltinTopicDataDataReader::~PublicationBuiltinTopicDataDataReader (void)
{
}

DDS::PublicationBuiltinTopicDataDataReader_ptr
DDS::PublicationBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataDataReader_ptr
DDS::PublicationBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<PublicationBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::PublicationBuiltinTopicDataDataReader_ptr
DDS::PublicationBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

DDS::PublicationBuiltinTopicDataDataReader_ptr
DDS::PublicationBuiltinTopicDataDataReader::_duplicate (PublicationBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::PublicationBuiltinTopicDataDataReader::_tao_release (PublicationBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/PublicationBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::PublicationBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:DDS/PublicationBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
DDS::PublicationBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::SubscriptionBuiltinTopicDataTypeSupport.

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataTypeSupport>::duplicate (
    DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr p)
{
  return DDS::SubscriptionBuiltinTopicDataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataTypeSupport>::release (
    DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataTypeSupport>::nil (void)
{
  return DDS::SubscriptionBuiltinTopicDataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataTypeSupport>::marshal (
    const DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::SubscriptionBuiltinTopicDataTypeSupport::SubscriptionBuiltinTopicDataTypeSupport (void)
{}

DDS::SubscriptionBuiltinTopicDataTypeSupport::~SubscriptionBuiltinTopicDataTypeSupport (void)
{
}

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
DDS::SubscriptionBuiltinTopicDataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
DDS::SubscriptionBuiltinTopicDataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataTypeSupport::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataTypeSupport_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
DDS::SubscriptionBuiltinTopicDataTypeSupport::_nil (void)
{
  return 0;
}

DDS::SubscriptionBuiltinTopicDataTypeSupport_ptr
DDS::SubscriptionBuiltinTopicDataTypeSupport::_duplicate (SubscriptionBuiltinTopicDataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::SubscriptionBuiltinTopicDataTypeSupport::_tao_release (SubscriptionBuiltinTopicDataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/SubscriptionBuiltinTopicDataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::SubscriptionBuiltinTopicDataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDS/SubscriptionBuiltinTopicDataTypeSupport:1.0";
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::SubscriptionBuiltinTopicDataDataWriter.

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataWriter>::duplicate (
    DDS::SubscriptionBuiltinTopicDataDataWriter_ptr p)
{
  return DDS::SubscriptionBuiltinTopicDataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataWriter>::release (
    DDS::SubscriptionBuiltinTopicDataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataWriter>::nil (void)
{
  return DDS::SubscriptionBuiltinTopicDataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataWriter>::marshal (
    const DDS::SubscriptionBuiltinTopicDataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::SubscriptionBuiltinTopicDataDataWriter::SubscriptionBuiltinTopicDataDataWriter (void)
{}

DDS::SubscriptionBuiltinTopicDataDataWriter::~SubscriptionBuiltinTopicDataDataWriter (void)
{
}

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
DDS::SubscriptionBuiltinTopicDataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
DDS::SubscriptionBuiltinTopicDataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataDataWriter::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataDataWriter_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
DDS::SubscriptionBuiltinTopicDataDataWriter::_nil (void)
{
  return 0;
}

DDS::SubscriptionBuiltinTopicDataDataWriter_ptr
DDS::SubscriptionBuiltinTopicDataDataWriter::_duplicate (SubscriptionBuiltinTopicDataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::SubscriptionBuiltinTopicDataDataWriter::_tao_release (SubscriptionBuiltinTopicDataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/SubscriptionBuiltinTopicDataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::SubscriptionBuiltinTopicDataDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDS/SubscriptionBuiltinTopicDataDataWriter:1.0";
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::SubscriptionBuiltinTopicDataDataReader.

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataReader>::duplicate (
    DDS::SubscriptionBuiltinTopicDataDataReader_ptr p)
{
  return DDS::SubscriptionBuiltinTopicDataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataReader>::release (
    DDS::SubscriptionBuiltinTopicDataDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataReader>::nil (void)
{
  return DDS::SubscriptionBuiltinTopicDataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::SubscriptionBuiltinTopicDataDataReader>::marshal (
    const DDS::SubscriptionBuiltinTopicDataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::SubscriptionBuiltinTopicDataDataReader::SubscriptionBuiltinTopicDataDataReader (void)
{}

DDS::SubscriptionBuiltinTopicDataDataReader::~SubscriptionBuiltinTopicDataDataReader (void)
{
}

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
DDS::SubscriptionBuiltinTopicDataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
DDS::SubscriptionBuiltinTopicDataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionBuiltinTopicDataDataReader::_duplicate (
      dynamic_cast<SubscriptionBuiltinTopicDataDataReader_ptr> (_tao_objref)
    );
}

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
DDS::SubscriptionBuiltinTopicDataDataReader::_nil (void)
{
  return 0;
}

DDS::SubscriptionBuiltinTopicDataDataReader_ptr
DDS::SubscriptionBuiltinTopicDataDataReader::_duplicate (SubscriptionBuiltinTopicDataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::SubscriptionBuiltinTopicDataDataReader::_tao_release (SubscriptionBuiltinTopicDataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/SubscriptionBuiltinTopicDataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::SubscriptionBuiltinTopicDataDataReader::_interface_repository_id (void) const
{
  return "IDL:DDS/SubscriptionBuiltinTopicDataDataReader:1.0";
}

::CORBA::Boolean
DDS::SubscriptionBuiltinTopicDataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

