// $Id: DdsDcps.mpc 5757 2012-08-02 09:27:41Z johnnyw $

project(OpenDDS_Dcps_idl_gen): dcps_bits, dcps_optional_features, \
                               dcps_ts_defaults, dds_suppress_any_support, install, \
                               gen_ostream {
  custom_only = 1
  idlflags += -Wb,pch_include=DCPS/DdsDcps_pch.h \
              -Wb,export_macro=OpenDDS_Dcps_Export \
              -Wb,export_include=dds/DCPS/dcps_export.h \
              -SS \
              -I$(DDS_ROOT)
  dcps_ts_flags += -Wb,pch_include=DCPS/DdsDcps_pch.h \
                   -Wb,export_macro=OpenDDS_Dcps_Export \
                   -Wb,export_include=dds/DCPS/dcps_export.h
  IDL_Files {
    DdsDcpsInfoUtils.idl
    DdsDcpsGuid.idl
  }

  IDL_Files {
    DdsDcps.idl
    DdsDcpsInfrastructure.idl
    DdsDcpsDomain.idl
    DdsDcpsPublication.idl
    DdsDcpsSubscription.idl
    DdsDcpsTopic.idl
    DdsDcpsSubscriptionExt.idl
    DdsDcpsTypeSupportExt.idl
  }

  TypeSupport_Files {
    dcps_ts_flags += -o CorbaSeq -SI -Wb,tao_include_prefix=tao/
    gendir = CorbaSeq
    CorbaSeq/BooleanSeq.idl
    CorbaSeq/CharSeq.idl
    CorbaSeq/DoubleSeq.idl
    CorbaSeq/FloatSeq.idl
    CorbaSeq/LongDoubleSeq.idl
    CorbaSeq/LongLongSeq.idl
    CorbaSeq/LongSeq.idl
    CorbaSeq/OctetSeq.idl
    CorbaSeq/ShortSeq.idl
    CorbaSeq/StringSeq.idl
    CorbaSeq/ULongLongSeq.idl
    CorbaSeq/ULongSeq.idl
    CorbaSeq/UShortSeq.idl
    CorbaSeq/WCharSeq.idl
    CorbaSeq/WStringSeq.idl
  }

  TypeSupport_Files {
    dcps_ts_flags += -SI
    DdsDcpsGuid.idl
    DdsDcpsInfoUtils.idl
  }

  verbatim(gnuace, bottom, 1) {
    idl_stubs: DdsDcpsGuidTypeSupportImpl.cpp DdsDcpsInfoUtilsTypeSupportImpl.cpp CorbaSeq/BooleanSeqTypeSupportImpl.cpp CorbaSeq/CharSeqTypeSupportImpl.cpp CorbaSeq/DoubleSeqTypeSupportImpl.cpp CorbaSeq/FloatSeqTypeSupportImpl.cpp CorbaSeq/LongDoubleSeqTypeSupportImpl.cpp CorbaSeq/LongLongSeqTypeSupportImpl.cpp CorbaSeq/LongSeqTypeSupportImpl.cpp CorbaSeq/OctetSeqTypeSupportImpl.cpp CorbaSeq/ShortSeqTypeSupportImpl.cpp CorbaSeq/StringSeqTypeSupportImpl.cpp CorbaSeq/ULongLongSeqTypeSupportImpl.cpp CorbaSeq/ULongSeqTypeSupportImpl.cpp CorbaSeq/UShortSeqTypeSupportImpl.cpp CorbaSeq/WCharSeqTypeSupportImpl.cpp CorbaSeq/WStringSeqTypeSupportImpl.cpp
  }
}

project(OpenDDS_Dcps): taolib, core, coverage_optional, dds_macros, install, dcps_optional_features, dcps_bits_source, dds_suppress_any_support {
  after       += OpenDDS_Dcps_idl_gen
  sharedname   = OpenDDS_Dcps
  dynamicflags = OPENDDS_DCPS_BUILD_DLL
  libout       = $(DDS_ROOT)/lib
  includes    += $(DDS_ROOT)
  pch_header   = DCPS/DdsDcps_pch.h
  pch_source   = DCPS/DdsDcps_pch.cpp
  macros      += NOMINMAX         //don't #define min and max in Win32 headers

  //The following is only to make the PCH work, client projects should not have
  //this as an include path.
  includes += $(DDS_ROOT)/dds

  // Empty IDL list because dds_suppress_any_support brings in taoidldefaults,
  // and we need dds_suppress_any_support so that we link against anytypecode.
  IDL_Files {
  }

  Source_Files {
    DCPS
    DCPS/transport/framework

    DdsDcpsC.cpp
    DdsDcpsDomainC.cpp
    DdsDcpsGuidC.cpp
    DdsDcpsInfoUtilsC.cpp
    DdsDcpsInfrastructureC.cpp
    DdsDcpsPublicationC.cpp
    DdsDcpsSubscriptionC.cpp
    DdsDcpsSubscriptionExtC.cpp
    DdsDcpsTopicC.cpp
    DdsDcpsTypeSupportExtC.cpp

    DdsDcpsGuidTypeSupportImpl.cpp
    DdsDcpsInfoUtilsTypeSupportImpl.cpp
    DdsDcpsInfrastructureTypeSupportImpl.cpp

    CorbaSeq/BooleanSeqTypeSupportImpl.cpp
    CorbaSeq/CharSeqTypeSupportImpl.cpp
    CorbaSeq/DoubleSeqTypeSupportImpl.cpp
    CorbaSeq/FloatSeqTypeSupportImpl.cpp
    CorbaSeq/LongDoubleSeqTypeSupportImpl.cpp
    CorbaSeq/LongLongSeqTypeSupportImpl.cpp
    CorbaSeq/LongSeqTypeSupportImpl.cpp
    CorbaSeq/OctetSeqTypeSupportImpl.cpp
    CorbaSeq/ShortSeqTypeSupportImpl.cpp
    CorbaSeq/StringSeqTypeSupportImpl.cpp
    CorbaSeq/ULongLongSeqTypeSupportImpl.cpp
    CorbaSeq/ULongSeqTypeSupportImpl.cpp
    CorbaSeq/UShortSeqTypeSupportImpl.cpp
    CorbaSeq/WCharSeqTypeSupportImpl.cpp
    CorbaSeq/WStringSeqTypeSupportImpl.cpp
  }

  Header_Files {
    Version.h
    DCPS
    DCPS/transport/framework
    DCPS/yard

    DdsDcpsC.h
    DdsDcpsDomainC.h
    DdsDcpsGuidC.h
    DdsDcpsInfoUtilsC.h
    DdsDcpsInfrastructureC.h
    DdsDcpsPublicationC.h
    DdsDcpsSubscriptionC.h
    DdsDcpsSubscriptionExtC.h
    DdsDcpsTopicC.h
    DdsDcpsTypeSupportExtC.h

    DdsDcpsGuidTypeSupportImpl.h
    DdsDcpsInfoUtilsTypeSupportImpl.h
    DdsDcpsInfrastructureTypeSupportImpl.h

    // Although these files only contain comments since
    // service-side suppression is done,
    // they are included here so that "make install" will
    // work.
    DdsDcpsS.h
    DdsDcpsDomainS.h
    DdsDcpsGuidS.h
    DdsDcpsInfoUtilsS.h
    DdsDcpsInfrastructureS.h
    DdsDcpsPublicationS.h
    DdsDcpsSubscriptionS.h
    DdsDcpsSubscriptionExtS.h
    DdsDcpsTopicS.h
    DdsDcpsTypeSupportExtS.h

    CorbaSeq/BooleanSeqTypeSupportImpl.h
    CorbaSeq/CharSeqTypeSupportImpl.h
    CorbaSeq/DoubleSeqTypeSupportImpl.h
    CorbaSeq/FloatSeqTypeSupportImpl.h
    CorbaSeq/LongDoubleSeqTypeSupportImpl.h
    CorbaSeq/LongLongSeqTypeSupportImpl.h
    CorbaSeq/LongSeqTypeSupportImpl.h
    CorbaSeq/OctetSeqTypeSupportImpl.h
    CorbaSeq/ShortSeqTypeSupportImpl.h
    CorbaSeq/StringSeqTypeSupportImpl.h
    CorbaSeq/ULongLongSeqTypeSupportImpl.h
    CorbaSeq/ULongSeqTypeSupportImpl.h
    CorbaSeq/UShortSeqTypeSupportImpl.h
    CorbaSeq/WCharSeqTypeSupportImpl.h
    CorbaSeq/WStringSeqTypeSupportImpl.h
  }

  Inline_Files {
    DdsDcpsC.inl
    DdsDcpsDomainC.inl
    DdsDcpsGuidC.inl
    DdsDcpsInfoUtilsC.inl
    DdsDcpsInfrastructureC.inl
    DdsDcpsPublicationC.inl
    DdsDcpsSubscriptionC.inl
    DdsDcpsSubscriptionExtC.inl
    DdsDcpsTopicC.inl
    DdsDcpsTypeSupportExtC.inl
  }

  Template_Files {
    DCPS
    DCPS/transport/framework
  }

  InstallData_Files {
    gendir = .
    ../MPC
    ../AUTHORS
    ../README
    ../VERSION
    ../LICENSE
    ../NEWS
    ../rules.dds.GNU
  }

  InstallData_Files {
    gendir = bin
    ../bin/PerlDDS
  }

  verbatim(gnuace, postinstall) {
"	echo export DDS_ROOT=$(INSTALL_PREFIX)/share/dds> $(INSTALL_PREFIX)/share/dds/dds-devel.sh"
"	@$(MKDIR) $(INSTALL_PREFIX)/share/dds/dds"
"	ln -sf $(INSTALL_PREFIX)/include/dds/Version.h $(INSTALL_PREFIX)/share/dds/dds"
  }
}
