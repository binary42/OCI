// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p7
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376

#include "DcpsInfo_pch.h"
#include "FederatorTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "FederatorTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::OwnerUpdateTypeSupport.

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateTypeSupport>::duplicate (
    OpenDDS::Federator::OwnerUpdateTypeSupport_ptr p)
{
  return OpenDDS::Federator::OwnerUpdateTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateTypeSupport>::release (
    OpenDDS::Federator::OwnerUpdateTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateTypeSupport>::nil (void)
{
  return OpenDDS::Federator::OwnerUpdateTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateTypeSupport>::marshal (
    const OpenDDS::Federator::OwnerUpdateTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::OwnerUpdateTypeSupport::OwnerUpdateTypeSupport (void)
{}

OpenDDS::Federator::OwnerUpdateTypeSupport::~OwnerUpdateTypeSupport (void)
{
}

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
OpenDDS::Federator::OwnerUpdateTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateTypeSupport::_duplicate (
      dynamic_cast<OwnerUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
OpenDDS::Federator::OwnerUpdateTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateTypeSupport::_duplicate (
      dynamic_cast<OwnerUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
OpenDDS::Federator::OwnerUpdateTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::Federator::OwnerUpdateTypeSupport_ptr
OpenDDS::Federator::OwnerUpdateTypeSupport::_duplicate (OwnerUpdateTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::OwnerUpdateTypeSupport::_tao_release (OwnerUpdateTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/OwnerUpdateTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::OwnerUpdateTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/OwnerUpdateTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::OwnerUpdateDataWriter.

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataWriter>::duplicate (
    OpenDDS::Federator::OwnerUpdateDataWriter_ptr p)
{
  return OpenDDS::Federator::OwnerUpdateDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataWriter>::release (
    OpenDDS::Federator::OwnerUpdateDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataWriter>::nil (void)
{
  return OpenDDS::Federator::OwnerUpdateDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataWriter>::marshal (
    const OpenDDS::Federator::OwnerUpdateDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::OwnerUpdateDataWriter::OwnerUpdateDataWriter (void)
{}

OpenDDS::Federator::OwnerUpdateDataWriter::~OwnerUpdateDataWriter (void)
{
}

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
OpenDDS::Federator::OwnerUpdateDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateDataWriter::_duplicate (
      dynamic_cast<OwnerUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
OpenDDS::Federator::OwnerUpdateDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateDataWriter::_duplicate (
      dynamic_cast<OwnerUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
OpenDDS::Federator::OwnerUpdateDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::Federator::OwnerUpdateDataWriter_ptr
OpenDDS::Federator::OwnerUpdateDataWriter::_duplicate (OwnerUpdateDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::OwnerUpdateDataWriter::_tao_release (OwnerUpdateDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/OwnerUpdateDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::OwnerUpdateDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/OwnerUpdateDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::OwnerUpdateDataReader.

OpenDDS::Federator::OwnerUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataReader>::duplicate (
    OpenDDS::Federator::OwnerUpdateDataReader_ptr p)
{
  return OpenDDS::Federator::OwnerUpdateDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataReader>::release (
    OpenDDS::Federator::OwnerUpdateDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::OwnerUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataReader>::nil (void)
{
  return OpenDDS::Federator::OwnerUpdateDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::OwnerUpdateDataReader>::marshal (
    const OpenDDS::Federator::OwnerUpdateDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::OwnerUpdateDataReader::OwnerUpdateDataReader (void)
{}

OpenDDS::Federator::OwnerUpdateDataReader::~OwnerUpdateDataReader (void)
{
}

OpenDDS::Federator::OwnerUpdateDataReader_ptr
OpenDDS::Federator::OwnerUpdateDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateDataReader::_duplicate (
      dynamic_cast<OwnerUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateDataReader_ptr
OpenDDS::Federator::OwnerUpdateDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return OwnerUpdateDataReader::_duplicate (
      dynamic_cast<OwnerUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::OwnerUpdateDataReader_ptr
OpenDDS::Federator::OwnerUpdateDataReader::_nil (void)
{
  return 0;
}

OpenDDS::Federator::OwnerUpdateDataReader_ptr
OpenDDS::Federator::OwnerUpdateDataReader::_duplicate (OwnerUpdateDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::OwnerUpdateDataReader::_tao_release (OwnerUpdateDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/OwnerUpdateDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::OwnerUpdateDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/OwnerUpdateDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::OwnerUpdateDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::TopicUpdateTypeSupport.

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateTypeSupport>::duplicate (
    OpenDDS::Federator::TopicUpdateTypeSupport_ptr p)
{
  return OpenDDS::Federator::TopicUpdateTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateTypeSupport>::release (
    OpenDDS::Federator::TopicUpdateTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateTypeSupport>::nil (void)
{
  return OpenDDS::Federator::TopicUpdateTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateTypeSupport>::marshal (
    const OpenDDS::Federator::TopicUpdateTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::TopicUpdateTypeSupport::TopicUpdateTypeSupport (void)
{}

OpenDDS::Federator::TopicUpdateTypeSupport::~TopicUpdateTypeSupport (void)
{
}

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
OpenDDS::Federator::TopicUpdateTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateTypeSupport::_duplicate (
      dynamic_cast<TopicUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
OpenDDS::Federator::TopicUpdateTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateTypeSupport::_duplicate (
      dynamic_cast<TopicUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
OpenDDS::Federator::TopicUpdateTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::Federator::TopicUpdateTypeSupport_ptr
OpenDDS::Federator::TopicUpdateTypeSupport::_duplicate (TopicUpdateTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::TopicUpdateTypeSupport::_tao_release (TopicUpdateTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/TopicUpdateTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::TopicUpdateTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/TopicUpdateTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::TopicUpdateDataWriter.

OpenDDS::Federator::TopicUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataWriter>::duplicate (
    OpenDDS::Federator::TopicUpdateDataWriter_ptr p)
{
  return OpenDDS::Federator::TopicUpdateDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataWriter>::release (
    OpenDDS::Federator::TopicUpdateDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::TopicUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataWriter>::nil (void)
{
  return OpenDDS::Federator::TopicUpdateDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataWriter>::marshal (
    const OpenDDS::Federator::TopicUpdateDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::TopicUpdateDataWriter::TopicUpdateDataWriter (void)
{}

OpenDDS::Federator::TopicUpdateDataWriter::~TopicUpdateDataWriter (void)
{
}

OpenDDS::Federator::TopicUpdateDataWriter_ptr
OpenDDS::Federator::TopicUpdateDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateDataWriter::_duplicate (
      dynamic_cast<TopicUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateDataWriter_ptr
OpenDDS::Federator::TopicUpdateDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateDataWriter::_duplicate (
      dynamic_cast<TopicUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateDataWriter_ptr
OpenDDS::Federator::TopicUpdateDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::Federator::TopicUpdateDataWriter_ptr
OpenDDS::Federator::TopicUpdateDataWriter::_duplicate (TopicUpdateDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::TopicUpdateDataWriter::_tao_release (TopicUpdateDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/TopicUpdateDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::TopicUpdateDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/TopicUpdateDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::TopicUpdateDataReader.

OpenDDS::Federator::TopicUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataReader>::duplicate (
    OpenDDS::Federator::TopicUpdateDataReader_ptr p)
{
  return OpenDDS::Federator::TopicUpdateDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataReader>::release (
    OpenDDS::Federator::TopicUpdateDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::TopicUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataReader>::nil (void)
{
  return OpenDDS::Federator::TopicUpdateDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::TopicUpdateDataReader>::marshal (
    const OpenDDS::Federator::TopicUpdateDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::TopicUpdateDataReader::TopicUpdateDataReader (void)
{}

OpenDDS::Federator::TopicUpdateDataReader::~TopicUpdateDataReader (void)
{
}

OpenDDS::Federator::TopicUpdateDataReader_ptr
OpenDDS::Federator::TopicUpdateDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateDataReader::_duplicate (
      dynamic_cast<TopicUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateDataReader_ptr
OpenDDS::Federator::TopicUpdateDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return TopicUpdateDataReader::_duplicate (
      dynamic_cast<TopicUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::TopicUpdateDataReader_ptr
OpenDDS::Federator::TopicUpdateDataReader::_nil (void)
{
  return 0;
}

OpenDDS::Federator::TopicUpdateDataReader_ptr
OpenDDS::Federator::TopicUpdateDataReader::_duplicate (TopicUpdateDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::TopicUpdateDataReader::_tao_release (TopicUpdateDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/TopicUpdateDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::TopicUpdateDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/TopicUpdateDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::TopicUpdateDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::ParticipantUpdateTypeSupport.

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateTypeSupport>::duplicate (
    OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr p)
{
  return OpenDDS::Federator::ParticipantUpdateTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateTypeSupport>::release (
    OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateTypeSupport>::nil (void)
{
  return OpenDDS::Federator::ParticipantUpdateTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateTypeSupport>::marshal (
    const OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::ParticipantUpdateTypeSupport::ParticipantUpdateTypeSupport (void)
{}

OpenDDS::Federator::ParticipantUpdateTypeSupport::~ParticipantUpdateTypeSupport (void)
{
}

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
OpenDDS::Federator::ParticipantUpdateTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateTypeSupport::_duplicate (
      dynamic_cast<ParticipantUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
OpenDDS::Federator::ParticipantUpdateTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateTypeSupport::_duplicate (
      dynamic_cast<ParticipantUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
OpenDDS::Federator::ParticipantUpdateTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::Federator::ParticipantUpdateTypeSupport_ptr
OpenDDS::Federator::ParticipantUpdateTypeSupport::_duplicate (ParticipantUpdateTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::ParticipantUpdateTypeSupport::_tao_release (ParticipantUpdateTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/ParticipantUpdateTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::ParticipantUpdateTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/ParticipantUpdateTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::ParticipantUpdateDataWriter.

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataWriter>::duplicate (
    OpenDDS::Federator::ParticipantUpdateDataWriter_ptr p)
{
  return OpenDDS::Federator::ParticipantUpdateDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataWriter>::release (
    OpenDDS::Federator::ParticipantUpdateDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataWriter>::nil (void)
{
  return OpenDDS::Federator::ParticipantUpdateDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataWriter>::marshal (
    const OpenDDS::Federator::ParticipantUpdateDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::ParticipantUpdateDataWriter::ParticipantUpdateDataWriter (void)
{}

OpenDDS::Federator::ParticipantUpdateDataWriter::~ParticipantUpdateDataWriter (void)
{
}

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
OpenDDS::Federator::ParticipantUpdateDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateDataWriter::_duplicate (
      dynamic_cast<ParticipantUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
OpenDDS::Federator::ParticipantUpdateDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateDataWriter::_duplicate (
      dynamic_cast<ParticipantUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
OpenDDS::Federator::ParticipantUpdateDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::Federator::ParticipantUpdateDataWriter_ptr
OpenDDS::Federator::ParticipantUpdateDataWriter::_duplicate (ParticipantUpdateDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::ParticipantUpdateDataWriter::_tao_release (ParticipantUpdateDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/ParticipantUpdateDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::ParticipantUpdateDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/ParticipantUpdateDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::ParticipantUpdateDataReader.

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataReader>::duplicate (
    OpenDDS::Federator::ParticipantUpdateDataReader_ptr p)
{
  return OpenDDS::Federator::ParticipantUpdateDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataReader>::release (
    OpenDDS::Federator::ParticipantUpdateDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataReader>::nil (void)
{
  return OpenDDS::Federator::ParticipantUpdateDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::ParticipantUpdateDataReader>::marshal (
    const OpenDDS::Federator::ParticipantUpdateDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::ParticipantUpdateDataReader::ParticipantUpdateDataReader (void)
{}

OpenDDS::Federator::ParticipantUpdateDataReader::~ParticipantUpdateDataReader (void)
{
}

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
OpenDDS::Federator::ParticipantUpdateDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateDataReader::_duplicate (
      dynamic_cast<ParticipantUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
OpenDDS::Federator::ParticipantUpdateDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ParticipantUpdateDataReader::_duplicate (
      dynamic_cast<ParticipantUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
OpenDDS::Federator::ParticipantUpdateDataReader::_nil (void)
{
  return 0;
}

OpenDDS::Federator::ParticipantUpdateDataReader_ptr
OpenDDS::Federator::ParticipantUpdateDataReader::_duplicate (ParticipantUpdateDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::ParticipantUpdateDataReader::_tao_release (ParticipantUpdateDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/ParticipantUpdateDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::ParticipantUpdateDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/ParticipantUpdateDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::ParticipantUpdateDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::PublicationUpdateTypeSupport.

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateTypeSupport>::duplicate (
    OpenDDS::Federator::PublicationUpdateTypeSupport_ptr p)
{
  return OpenDDS::Federator::PublicationUpdateTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateTypeSupport>::release (
    OpenDDS::Federator::PublicationUpdateTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateTypeSupport>::nil (void)
{
  return OpenDDS::Federator::PublicationUpdateTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateTypeSupport>::marshal (
    const OpenDDS::Federator::PublicationUpdateTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::PublicationUpdateTypeSupport::PublicationUpdateTypeSupport (void)
{}

OpenDDS::Federator::PublicationUpdateTypeSupport::~PublicationUpdateTypeSupport (void)
{
}

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
OpenDDS::Federator::PublicationUpdateTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateTypeSupport::_duplicate (
      dynamic_cast<PublicationUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
OpenDDS::Federator::PublicationUpdateTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateTypeSupport::_duplicate (
      dynamic_cast<PublicationUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
OpenDDS::Federator::PublicationUpdateTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::Federator::PublicationUpdateTypeSupport_ptr
OpenDDS::Federator::PublicationUpdateTypeSupport::_duplicate (PublicationUpdateTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::PublicationUpdateTypeSupport::_tao_release (PublicationUpdateTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/PublicationUpdateTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::PublicationUpdateTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/PublicationUpdateTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::PublicationUpdateDataWriter.

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataWriter>::duplicate (
    OpenDDS::Federator::PublicationUpdateDataWriter_ptr p)
{
  return OpenDDS::Federator::PublicationUpdateDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataWriter>::release (
    OpenDDS::Federator::PublicationUpdateDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataWriter>::nil (void)
{
  return OpenDDS::Federator::PublicationUpdateDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataWriter>::marshal (
    const OpenDDS::Federator::PublicationUpdateDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::PublicationUpdateDataWriter::PublicationUpdateDataWriter (void)
{}

OpenDDS::Federator::PublicationUpdateDataWriter::~PublicationUpdateDataWriter (void)
{
}

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
OpenDDS::Federator::PublicationUpdateDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateDataWriter::_duplicate (
      dynamic_cast<PublicationUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
OpenDDS::Federator::PublicationUpdateDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateDataWriter::_duplicate (
      dynamic_cast<PublicationUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
OpenDDS::Federator::PublicationUpdateDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::Federator::PublicationUpdateDataWriter_ptr
OpenDDS::Federator::PublicationUpdateDataWriter::_duplicate (PublicationUpdateDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::PublicationUpdateDataWriter::_tao_release (PublicationUpdateDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/PublicationUpdateDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::PublicationUpdateDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/PublicationUpdateDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::PublicationUpdateDataReader.

OpenDDS::Federator::PublicationUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataReader>::duplicate (
    OpenDDS::Federator::PublicationUpdateDataReader_ptr p)
{
  return OpenDDS::Federator::PublicationUpdateDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataReader>::release (
    OpenDDS::Federator::PublicationUpdateDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::PublicationUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataReader>::nil (void)
{
  return OpenDDS::Federator::PublicationUpdateDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::PublicationUpdateDataReader>::marshal (
    const OpenDDS::Federator::PublicationUpdateDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::PublicationUpdateDataReader::PublicationUpdateDataReader (void)
{}

OpenDDS::Federator::PublicationUpdateDataReader::~PublicationUpdateDataReader (void)
{
}

OpenDDS::Federator::PublicationUpdateDataReader_ptr
OpenDDS::Federator::PublicationUpdateDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateDataReader::_duplicate (
      dynamic_cast<PublicationUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateDataReader_ptr
OpenDDS::Federator::PublicationUpdateDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PublicationUpdateDataReader::_duplicate (
      dynamic_cast<PublicationUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::PublicationUpdateDataReader_ptr
OpenDDS::Federator::PublicationUpdateDataReader::_nil (void)
{
  return 0;
}

OpenDDS::Federator::PublicationUpdateDataReader_ptr
OpenDDS::Federator::PublicationUpdateDataReader::_duplicate (PublicationUpdateDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::PublicationUpdateDataReader::_tao_release (PublicationUpdateDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/PublicationUpdateDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::PublicationUpdateDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/PublicationUpdateDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::PublicationUpdateDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::SubscriptionUpdateTypeSupport.

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateTypeSupport>::duplicate (
    OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr p)
{
  return OpenDDS::Federator::SubscriptionUpdateTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateTypeSupport>::release (
    OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateTypeSupport>::nil (void)
{
  return OpenDDS::Federator::SubscriptionUpdateTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateTypeSupport>::marshal (
    const OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport::SubscriptionUpdateTypeSupport (void)
{}

OpenDDS::Federator::SubscriptionUpdateTypeSupport::~SubscriptionUpdateTypeSupport (void)
{
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateTypeSupport::_duplicate (
      dynamic_cast<SubscriptionUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateTypeSupport::_duplicate (
      dynamic_cast<SubscriptionUpdateTypeSupport_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_nil (void)
{
  return 0;
}

OpenDDS::Federator::SubscriptionUpdateTypeSupport_ptr
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_duplicate (SubscriptionUpdateTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_tao_release (SubscriptionUpdateTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/SubscriptionUpdateTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::SubscriptionUpdateTypeSupport::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/SubscriptionUpdateTypeSupport:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::SubscriptionUpdateDataWriter.

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataWriter>::duplicate (
    OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr p)
{
  return OpenDDS::Federator::SubscriptionUpdateDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataWriter>::release (
    OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataWriter>::nil (void)
{
  return OpenDDS::Federator::SubscriptionUpdateDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataWriter>::marshal (
    const OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::SubscriptionUpdateDataWriter::SubscriptionUpdateDataWriter (void)
{}

OpenDDS::Federator::SubscriptionUpdateDataWriter::~SubscriptionUpdateDataWriter (void)
{
}

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
OpenDDS::Federator::SubscriptionUpdateDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateDataWriter::_duplicate (
      dynamic_cast<SubscriptionUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
OpenDDS::Federator::SubscriptionUpdateDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateDataWriter::_duplicate (
      dynamic_cast<SubscriptionUpdateDataWriter_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
OpenDDS::Federator::SubscriptionUpdateDataWriter::_nil (void)
{
  return 0;
}

OpenDDS::Federator::SubscriptionUpdateDataWriter_ptr
OpenDDS::Federator::SubscriptionUpdateDataWriter::_duplicate (SubscriptionUpdateDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::SubscriptionUpdateDataWriter::_tao_release (SubscriptionUpdateDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/SubscriptionUpdateDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::SubscriptionUpdateDataWriter::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/SubscriptionUpdateDataWriter:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for OpenDDS::Federator::SubscriptionUpdateDataReader.

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataReader>::duplicate (
    OpenDDS::Federator::SubscriptionUpdateDataReader_ptr p)
{
  return OpenDDS::Federator::SubscriptionUpdateDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataReader>::release (
    OpenDDS::Federator::SubscriptionUpdateDataReader_ptr p)
{
  ::CORBA::release (p);
}

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataReader>::nil (void)
{
  return OpenDDS::Federator::SubscriptionUpdateDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<OpenDDS::Federator::SubscriptionUpdateDataReader>::marshal (
    const OpenDDS::Federator::SubscriptionUpdateDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

OpenDDS::Federator::SubscriptionUpdateDataReader::SubscriptionUpdateDataReader (void)
{}

OpenDDS::Federator::SubscriptionUpdateDataReader::~SubscriptionUpdateDataReader (void)
{
}

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
OpenDDS::Federator::SubscriptionUpdateDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateDataReader::_duplicate (
      dynamic_cast<SubscriptionUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
OpenDDS::Federator::SubscriptionUpdateDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SubscriptionUpdateDataReader::_duplicate (
      dynamic_cast<SubscriptionUpdateDataReader_ptr> (_tao_objref)
    );
}

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
OpenDDS::Federator::SubscriptionUpdateDataReader::_nil (void)
{
  return 0;
}

OpenDDS::Federator::SubscriptionUpdateDataReader_ptr
OpenDDS::Federator::SubscriptionUpdateDataReader::_duplicate (SubscriptionUpdateDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
OpenDDS::Federator::SubscriptionUpdateDataReader::_tao_release (SubscriptionUpdateDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/Federator/SubscriptionUpdateDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* OpenDDS::Federator::SubscriptionUpdateDataReader::_interface_repository_id (void) const
{
  return "IDL:OpenDDS/Federator/SubscriptionUpdateDataReader:1.0";
}

::CORBA::Boolean
OpenDDS::Federator::SubscriptionUpdateDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

